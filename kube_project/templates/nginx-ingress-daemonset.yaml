apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx-ingress-microk8s-controller
  namespace: ingress
  labels:
    microk8s-application: nginx-ingress-microk8s
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: nginx-ingress-microk8s
  template:
    metadata:
      labels:
        name: nginx-ingress-microk8s
    spec:
      containers:
      - name: nginx-ingress-microk8s
        image: registry.k8s.io/ingress-nginx/controller:v1.8.0
        imagePullPolicy: IfNotPresent
        args:
        - /nginx-ingress-controller
        - --configmap=$(POD_NAMESPACE)/nginx-load-balancer-microk8s-conf
        - --tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf
        - --udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf
        - --ingress-class=public
        - --http-port=8080
        - --https-port=8443
        - --publish-status-address=127.0.0.1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 10254
          name: health
          protocol: TCP
        volumeMounts:
        - name: ssl-certificate
          mountPath: /etc/ingress-controller/ssl
        securityContext:
          runAsUser: 0
          runAsGroup: 0
          fsGroup: 0
      volumes:
      - name: ssl-certificate
        emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      serviceAccountName: nginx-ingress-microk8s-serviceaccount
      terminationGracePeriodSeconds: 60
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
